name: gha-action
on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    name: release

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14' 

      - name: Install dependencies
        run: |
          npm install -g semver standard-version
          sudo apt-get install -y jq
      
      - name: Configure git
        run: |
          git config --global user.email ""
          git config --global user.name "cicd-bot-teal"

      - name: Determine version and create package.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DEFAULT_VERSION='1.0.0'
          VERSION_ARGUMENTS=''
          LATEST_TAG=$(gh release list --limit 1 | grep -o -E 'v[0-9]+\.[0-9]+\.[0-9]+' | head -1)

          if [ -z "$LATEST_TAG" ]; then
            VERSION_ARGUMENTS="${VERSION_ARGUMENTS} --first-release"
            VERSION=$DEFAULT_VERSION
          else
            VERSION=${LATEST_TAG#v} # Remove 'v' prefix
          fi

          if ! npx semver valid $VERSION; then
            echo "Invalid semver. Defaulting to ${DEFAULT_VERSION}"
            VERSION=$DEFAULT_VERSION
          fi

          if [ ! -f package.json ]; then
            echo "{\"version\": \"$VERSION\"}" > package.json
            VERSION_ARGUMENTS="$VERSION_ARGUMENTS --skip.commit"
            standard-version $VERSION_ARGUMENTS
            git add CHANGELOG.md
            git commit -m "chore(release): $VERSION"
          else
            jq ".version = \"$VERSION\"" package.json > package.tmp.json && mv package.tmp.json package.json
            standard-version $VERSION_ARGUMENTS
          fi

          cat package.json
          git push --follow-tags origin ${{ github.ref }}

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(node -p "require('./package.json').version")
          awk '
          /#{2,3} .* \([0-9]{4}-[0-9]{2}-[0-9]{2}\)/ {
              if (found) exit;
              found=1;
              printit=1;
              print;
              next;
          }
          printit && /#{2,3} .* \([0-9]{4}-[0-9]{2}-[0-9]{2}\)/ { exit }
          printit { print }
          ' CHANGELOG.md > latest-release-notes.md

          gh release create v$VERSION \
            --target ${{ github.ref }} \
            --title "Release v$VERSION" \
            --notes-file latest-release-notes.md